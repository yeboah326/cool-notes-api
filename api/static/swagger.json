{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple CRUD API for a note taking application that supports tags too.",
    "version": "1.0.0",
    "title": "Cool Notes",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "asanteg36@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "cool-notes-api.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "account",
      "description": "Everything about user accounts"
    },
    {
      "name": "note",
      "description": "Everything about notes"
    },
    {
      "name": "tag",
      "description": "Everything about tags"
    }
  ],
  "schemes": ["https"],
  "paths": {
    "/account/": {
      "post": {
        "tags": ["account"],
        "summary": "Create a new user account",
        "description": "This does not require the user to be logged in",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountLoad"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User account for {name} has been created successfully",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "400": {
            "description": "A user with the given email already exists",
            "schema": { "$ref": "#/definitions/GenericResponse" }
          },
          "422": {
            "description": "Invalid data",
            "schema": { "$ref": "#/definitions/ValidationError" }
          }
        }
      },
      "get": {
        "tags": ["account"],
        "summary": "Get all user accounts",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountDump"
              }
            }
          },
          "401": {
            "description": "User is note authorized to perform this action",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          }
        }
      }
    },
    "/account/auth": {
      "post": {
        "tags": ["account"],
        "summary": "Generate bearer token for the user",
        "description": "This does not require the user to be logged in",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/AccountAuthorized"
            }
          },
          "422": {
            "description": "Invalid data",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          },
          "400": {
            "description": "Either username or password is wrong",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          }
        }
      }
    },
    "/note/": {
      "post": {
        "tags": ["note"],
        "summary": "Create a new note for the user",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteCreate"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Note created successfully",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "422": {
            "description": "Invalid data",
            "schema": {
              "$ref": "#/definitions/ValidationError"
            }
          }
        }
      },
      "delete": {
        "tags": ["note"],
        "summary": "Delete all notes for the user",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "All notes deleted successfully",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          }
        }
      },
      "get": {
        "tags": ["note"],
        "summary": "Get all notes for the user",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get all the created tags",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NoteDump"
              }
            }
          }
        }
      }
    },
    "/note/{id}": {
      "put": {
        "tags": ["note"],
        "summary": "Update existing note",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteUpdateLoad"
            }
          },
          {
            "in": "path",
            "name": "note_id",
            "description": "A note id",
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Note update successful",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "404": {
            "description": "A note with the given ID does not exist",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["note"],
        "summary": "Delete an existing note",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "note_id",
            "description": "A note id",
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Note deleted successfully",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "404": {
            "description": "A note with the given ID does not exist",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          }
        }
      },
      "get": {
        "tags": ["note"],
        "summary": "Get an existing note",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "note_id",
            "description": "A note id",
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/NoteRetrieve"
            }
          },
          "404": {
            "description": "A note with the given ID does not exist",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          }
        }
      }
    },
    "/tag/": {
      "post": {
        "tags": ["tag"],
        "summary": "Create a new tag",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New tag object",
            "schema": {
              "$ref": "#/definitions/TagLoad"
            },
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "{name} created successfully",
            "schema": { "$ref": "#/definitions/GenericResponse" }
          },
          "422": {
            "description": "Invalid data",
            "schema": { "$ref": "#/definitions/ValidationError" }
          }
        }
      },
      "get": {
        "tags": ["tag"],
        "summary": "Get all tags for the user",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TagDump"
              }
            }
          }
        }
      }
    },
    "/tag/{id}": {
      "delete": {
        "tags": ["tag"],
        "summary": "Delete an existing tag",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "tag_id",
            "description": "A tag id",
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tag deleted successfully",
            "schema": { "$ref": "#/definitions/GenericResponse" }
          },
          "404": {
            "description": "A tag with the given ID does not exist",
            "schema": { "$ref": "#/definitions/GenericResponse" }
          }
        }
      },
      "put": {
        "tags": ["tag"],
        "summary": "Update an existing tag",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "tag_id",
            "description": "A tag id",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "A new tag object",
            "required": true,
            "schema": { "$ref": "#/definitions/TagLoadUpdate" }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tag updated successfully",
            "schema": { "$ref": "#/definitions/GenericResponse" }
          },
          "404": {
            "description": "A tag with the given ID does not exist",
            "schema": { "$ref": "#/definitions/GenericResponse" }
          },
          "422": {
            "description": "A new name was not provided for the tag",
            "schema": { "$ref": "#/definitions/GenericResponse" }
          }
        }
      },
      "get": {
        "tags": ["tag"],
        "summary": "Get an existing tag",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "tag_id",
            "description": "A tag id",
            "required": true
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Succesful",
            "schema": { "$ref": "#/definitions/TagDump" }
          },
          "404": {
            "description": "A tag with the given ID does not exist",
            "schema": { "$ref": "#/definitions/GenericResponse" }
          }
        }
      }
    },
    "/tag/add_tag": {
      "post": {
        "tags": ["tag"],
        "summary": "Add tag to note",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "note_tag",
            "description": "A note tag",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTag"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tag added to note successfully",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          }
        }
      }
    },
    "/tag/remove_tag": {
      "post": {
        "tags": ["tag"],
        "summary": "Remove tag from note",
        "description": "This can only be done by the logged in user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "note_tag",
            "description": "A note tag",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteTag"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tag removed successfully",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "field": { "type": "array", "items": { "type": "string" } }
      }
    },
    "GenericResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "message": { "type": "string" },
        "errors": {
          "type": "array",
          "items": { "$ref": "#/definitions/Error" }
        }
      }
    },
    "AccountLoad": {
      "type": "object",
      "required": ["name", "email", "account_type", "password"],
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "jdoe@email.com"
        },
        "account_type": {
          "type": "string",
          "enum": ["normal", "super"],
          "example": "normal"
        },
        "password": {
          "type": "string",
          "example": "123456789"
        }
      }
    },
    "AccountDump": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "name": { "type": "string" },
        "email": { "type": "string" },
        "date_created": { "type": "string" },
        "date_updated": { "type": "string" },
        "account_type": { "type": "string" }
      }
    },
    "AccountLogin": {
      "type": "object",
      "properties": {
        "email": { "type": "string", "example": "jdoe@email.com" },
        "password": { "type": "string", "example": "123456789" }
      }
    },
    "AccountAuthorized": {
      "type": "object",
      "properties": {
        "token": { "type": "string" },
        "account": {
          "$ref": "#/definitions/AccountDump"
        }
      }
    },
    "NoteCreate": {
      "type": "object",
      "properties": {
        "note": { "$ref": "#/definitions/NoteLoad" },
        "tags": {
          "type": "array",
          "items": { "$ref": "#/definitions/TagLoad" }
        }
      }
    },
    "NoteRetrieve": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "date_updated": { "type": "string" },
        "tags": {
          "type": "array",
          "items": { "$ref": "#/definitions/TagDump" }
        },
        "content": { "type": "string" },
        "title": { "type": "string" },
        "date_created": { "type": "string" },
        "author": { "type": "string" }
      }
    },
    "NoteDump": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "title": { "type": "string" },
        "content": { "type": "string" },
        "author_id": { "type": "integer" },
        "author": { "type": "string" },
        "date_created": { "type": "string" },
        "date_updated": { "type": "string" }
      }
    },
    "NoteLoad": {
      "type": "object",
      "properties": {
        "title": { "type": "string" },
        "content": { "type": "string" }
      }
    },
    "NoteUpdateLoad": {
      "type": "object",
      "properties": {
        "new_title": { "type": "string" },
        "new_content": { "type": "string" }
      }
    },
    "TagLoad": {
      "type": "object",
      "properties": {
        "name": { "type": "string" }
      }
    },
    "TagLoadUpdate": {
      "type": "object",
      "properties": {
        "new_name": { "type": "string" }
      }
    },
    "TagDump": {
      "type": "object",
      "properties": {
        "id": { "type": "integer" },
        "name": { "type": "string" },
        "author_id": { "type": "integer" },
        "date_created": { "type": "string" }
      }
    },
    "NoteTag": {
      "type": "object",
      "properties": {
        "note_id": { "type": "integer" },
        "tag_id": { "type": "integer" }
      }
    }
  }
}
